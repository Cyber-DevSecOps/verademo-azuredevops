# Veracode Demo to Azure Pipeline
trigger:
  - main

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: VERACODE_API

jobs:
  - job: VeracodeContainerScann
    displayName: "Veracode Container pipeline"
    steps:
      - task: Bash@3
        displayName: Veracode Container Security - Scan
        inputs:
          targetType: "inline"
          script: |
            curl -fsS https://tools.veracode.com/veracode-cli/install | sh

            # create credentials directory if not exist
            mkdir -p ~/.veracode

            #test
            echo $(VERACODE_API_ID)
            echo $(VERACODE_API_KEY)
            # Generate File for credentials
            echo "api:" > ~/.veracode/veracode.yml
            echo "    key-id: $(VERACODE_API_ID)" >> ~/.veracode/veracode.yml
            echo "    key-secret: $(VERACODE_API_KEY)" >> ~/.veracode/veracode.yml

            ./veracode scan --source vulnerables/web-dvwa --type image -f table
            ./veracode scan --source vulnerables/web-dvwa --type image -f vulnerableWebDvwa.json
            

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: "vulnerableWebDvwa.json"
          ArtifactName: "vulnerableWebDvwa.json"
          publishLocation: "Container"

      - task: Bash@3
        displayName: "Veracode Container Security - Policy Check"
        inputs:
          targetType: "inline"
          script: |
            PASS=$(jq -r '."policy-passed"' vulnerableWebDvwa.json)
            echo "Passed policy: $PASS"
            if $PASS; then
              exit 0
            else
              exit 1
            fi


  - job: VeracodeIaCScann
    displayName: "Veracode IaC and Secret Scann pipeline"
    steps:    
      - task: Bash@3
        displayName: Veracode Iac repo Security - Scan
        inputs:
          targetType: "inline"
          script: |
            # download and install veracode cli
            curl -fsS https://tools.veracode.com/veracode-cli/install | sh
            
            # create credentials directory if not exist
            mkdir -p ~/.veracode

            # Generate File for credentials
            echo "api:" > ~/.veracode/veracode.yml
            echo "    key-id: $(VERACODE_API_ID)" >> ~/.veracode/veracode.yml
            echo "    key-secret: $(VERACODE_API_KEY)" >> ~/.veracode/veracode.yml

            ./veracode scan --type repo --source https://github.com/bridgecrewio/terragoat -o terragoat.json  

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: "terragoat.json"
          ArtifactName: "terragoat.json"
          publishLocation: "Container"

      - task: Bash@3
        displayName: "Veracode IaC Security - Policy Check"
        inputs:
          targetType: "inline"
          script: |
            PASS=$(jq -r '."policy-passed"' terragoat.json)
            echo "Passed policy: $PASS"
            if $PASS; then
              exit 0
            else
              exit 1
            fi  

  - job: BuildAndTestVeraDemo
    displayName: "Build and Test"
    steps:
      - task: Maven@4
        displayName: Compile VeraDemo
        inputs:
          mavenPomFile: "app/pom.xml"
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          javaHomeOption: "JDKVersion"
          jdkVersionOption: "1.8"
          mavenVersionOption: "Default"
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false

      - publish: $(System.DefaultWorkingDirectory)/app/target/verademo.war
        displayName: "Publish Artifact"
        artifact: WARCompiled

  - job: VeracodePipelineScan
    displayName: "Veracode Static Scan Pipeline"
    dependsOn: BuildAndTestVeraDemo
    steps:
      - download: current
        artifact: WARCompiled
        displayName: "Download Artifacts"

      - task: Bash@3
        displayName: Local Veracode Pipeline/Scan
        inputs:
          targetType: "inline"
          script: |
            curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
            unzip -o pipeline-scan-LATEST.zip
            java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f $(Pipeline.Workspace)/WARCompiled/verademo.war || true

      - publish: $(System.DefaultWorkingDirectory)/results.json
        artifact: VeracodePipelineScan

  - job: VeracodeUploadAndScan
    displayName: "Veracode Static + Sca (Upload and Scan)"
    dependsOn: VeracodePipelineScan
    steps:
      - download: current
        artifact: WARCompiled
        displayName: "Download Artifacts"
      - task: Veracode@3
        inputs:
          ConnectionDetailsSelection: "Service Connection"
          AnalysisService: "Veracode Nubuss"
          veracodeAppProfile: "VeraDemo-AzureDevOps"
          version: "$(build.buildNumber)"
          filepath: "$(Pipeline.Workspace)/WARCompiled/verademo.war"
          optargs: "-criticality high -deleteIncompleteScan 2"
          importResults: true
          maximumWaitTime: "360"
          createProfile: true
          failBuildOnPolicyFail: false
      - script: |
          echo "Fin"